# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  gzip on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types  text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml application/xml+rss font/ttf font/otf image/svg+xml;



  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 4096;

  include /etc/nginx/mime.types;
  default_type        application/octet-stream;

  # Load modular configuration files from the /etc/nginx/conf.d directory.
  # See http://nginx.org/en/docs/ngx_core_module.html#include
  # for more information.
  include /etc/nginx/conf.d/*.conf;





  server {
    listen 80;
    listen       443 ssl;

    if ($server_port !~ 443){
        rewrite ^(/.*)$ https://$host$1 permanent;
    }


    ssl_certificate "/etc/nginx/cert/www.yalexin.top_bundle.pem";
    ssl_certificate_key "/etc/nginx/cert/www.yalexin.top.key";
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;



    server_name www.yalexin.top;
    root         /usr/share/nginx/html;

    include /etc/nginx/default.d/*.conf;

    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }


    # 将用户请求转发到后台
    location /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      real_ip_header    X-Forwarded-For;
      real_ip_recursive  on;
      proxy_pass http://blog_api:8080;

    }


    #这里是需要部署的二级目录应用配置
    location ^~/blog/ {

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      real_ip_header    X-Forwarded-For;
      real_ip_recursive  on;

      proxy_pass http://node:3000/blog/;

    }




    # 必应代理
    location /bingProxy/ {
      rewrite ^/bingProxy/(.*)$ /$1 break;  #对加了proxy前缀的请求加以区分，真正访问的时候移除这个前缀,这个前缀需要自定义
      proxy_pass https://cn.bing.com;  #将真正的请求代理到真实的服务器地址
    }


  }


}

